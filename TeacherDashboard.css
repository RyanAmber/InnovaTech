* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Roboto Mono', 'Lato', sans-serif;
  background: linear-gradient(to bottom right, #e3f2fd, #90caf9);
  color: #222;
}

header {
  padding: 20px;
  font-size: 2rem;
  font-weight: bold;
  color: white;
  background-color: #1a237e;
  font-family: 'Roboto Mono', monospace;
}

.container {
  display: flex;
  flex-direction: row;
  height: calc(100vh - 80px);
  padding: 20px;
  gap: 20px;
}

.left {
  flex: 2;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.right {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.bubble-heading {
  font-size: 1.5rem;
  font-weight: 600;
  background-color: white;
  padding: 10px 20px;
  border-radius: 30px;
  margin-bottom: 20px;
  font-family: 'Lato', sans-serif;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
  gap: 20px;
  overflow-y: auto;
}

.card {
  background: white;
  border-radius: 16px;
  padding: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  cursor: pointer;
  transition: transform 0.2s ease;
  text-align: center;
}

.card:hover {
  transform: scale(1.05);
}

.card img {
  width: 100%;
  aspect-ratio: 3 / 2;
  object-fit: contain;
  border-radius: 8px;
}

.card p {
  font-weight: 500;
  margin-top: 10px;
  font-family: 'Roboto Mono', monospace;
}

/* Notification Panel */
.notifications-wrapper {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.notifications {
  background: white;
  border-radius: 20px;
  padding: 20px;
  height: 100%;
  overflow-y: auto;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}

.notif {
  padding: 12px;
  background-color: #f0f0f0;
  border-radius: 12px;
  margin-bottom: 10px;
  font-family: 'Roboto Mono', monospace;
}

/* Modal */
.modal {
  position: fixed;
  top: 0; left: 0;
  width: 100%;
  height: 100%;
  display: none;
  background: rgba(0, 0, 0, 0.5);
  justify-content: center;
  align-items: center;
  z-index: 999;
}

.modal-content {
  background: white;
  display: flex;
  flex-direction: row;
  padding: 20px;
  border-radius: 12px;
  width: 80%;
  max-height: 90vh;
  overflow: hidden;
  gap: 20px;
}

.modal-left {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 10px;
  overflow-y: auto;
}

.modal-right {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: start;
  gap: 20px;
}

.component-img {
  width: 100%;
  max-width: 300px;
  height: auto;
  border-radius: 12px;
  object-fit: contain;
}

.status-bar {
  display: flex;
  width: 100%;
  height: 30px;
  border-radius: 6px;
  overflow: hidden;
  text-align: center;
  font-weight: bold;
  font-family: 'Roboto Mono', monospace;
}

.status {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  color: black;
}

.green { background-color: #a5d6a7; }
.red { background-color: #ef9a9a; }
.yellow { background-color: #fff59d; }

.actions {
  display: flex;
  gap: 10px;
}

.add-btn, .remove-btn {
  padding: 8px 12px;
  background-color: #1e88e5;
  color: white;
  border: none;
  border-radius: 6px;
  font-family: 'Roboto Mono', monospace;
  cursor: pointer;
  font-weight: bold;
}

.inline-add-form {
  margin-top: 10px;
  padding: 10px;
  border: 1px solid #ccc;
  background-color: #f4f4f4;
  border-radius: 8px;
}

.inline-add-form input {
  padding: 6px;
  margin-bottom: 6px;
  border-radius: 4px;
  border: 1px solid #ccc;
  width: 100%;
}

/* Parts list with student-style cards */
.parts-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
  gap: 12px;
  overflow-y: auto;
  padding: 10px 0;
}

.part-entry {
  background-color: #eeeeee;
  border-radius: 12px;
  padding: 10px;
  font-family: 'Roboto Mono', monospace;
  display: flex;
  flex-direction: column;
  gap: 6px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
}

.remove-part-btn {
  background-color: #d32f2f;
  color: white;
  border: none;
  padding: 6px 12px;
  border-radius: 6px;
  cursor: pointer;
  font-family: 'Roboto Mono', monospace;
}
